name: Clang Format Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install clang-format
        run: sudo apt-get install -y clang-format

      - name: Find committed and new files
        id: find_files
        run: |
          # Get the list of committed files that have changes (modified)
          modified_files=$(git diff --name-only --diff-filter=M -- '*.cpp' '*.h')   # M stands for modified

          # Get new files that are being pushed (not tracked by Git before)
          new_files=$(git ls-files --others --exclude-standard '*.cpp' '*.h')        # List of new untracked files

          # Get files that are part of the pull request and changed compared to 'origin/main'
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            pr_files=$(git diff --name-only origin/main...HEAD -- '*.cpp' '*.h')
          else
            pr_files=""
          fi

          # Combine all file lists into a single list (modified and new)
          all_files=$(echo -e "$modified_files\n$new_files\n$pr_files" | sort -u | tr '\n' ' ')

          # Set the combined list of files to the GitHub Actions environment variable
          echo "FILES=$all_files" >> $GITHUB_ENV

          # Output the files being checked
          echo "Checking files: $all_files"

      - name: Run clang-format and show differences
        run: |
          if [ -n "$FILES" ]; then
            clang-format -i $FILES
            if ! git diff --quiet; then
              echo "Code not formatted correctly. Showing diff:"
              git diff --color
              exit 1
            fi
          else
            echo "No relevant files to check."
          fi
