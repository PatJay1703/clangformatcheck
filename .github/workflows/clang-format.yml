name: Clang Format Check

on:
  pull_request:
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.cc'
      - '**/*.cxx'
      - '**/*.java'
      - '**/*.js'
      - '**/*.json'
      - '**/*.m'
      - '**/*.h'
      - '**/*.proto'
      - '**/*.cs'

jobs:
  clang-format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Check Clang Format on Modified Lines
      run: |
        # Fetch the main branch to compare changes
        git fetch origin main
        modified_files=$(git diff --name-only origin/main...HEAD)
        
        if [ -z "$modified_files" ]; then
          echo "No files modified"
          exit 0
        fi

        # Run clang-format check on modified lines in each file
        for file in $modified_files; do
          if [[ $file == *.cpp || $file == *.c || $file == *.cc || $file == *.cxx || $file == *.java || $file == *.js || $file == *.json || $file == *.m || $file == *.h || $file == *.proto || $file == *.cs ]]; then
            echo "Checking clang-format for modified lines in $file"

            # Get the list of modified lines using git diff
            modified_lines=$(git diff --unified=0 origin/main...HEAD -- $file | grep -E '^\+[^+]' | cut -c2-)

            if [ -n "$modified_lines" ]; then
              # Apply clang-format only on the modified lines
              echo "$modified_lines" | clang-format --dry-run --Werror
              if [ $? -ne 0 ]; then
                echo "Clang-format check failed for $file. Please format the file using clang-format."
                exit 1
              fi
            fi
          fi
        done
