name: Clang Format Check

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.cc'
      - '**/*.cxx'
      - '**/*.java'
      - '**/*.js'
      - '**/*.json'
      - '**/*.m'
      - '**/*.h'
      - '**/*.proto'
      - '**/*.cs'

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install clang-format
        run: sudo apt-get install -y clang-format

      - name: Find modified files in PR
        id: find_files
        run: |
          # Identify modified files in the PR
          pr_files=$(git diff --name-only origin/main...HEAD -- '*.cpp' '*.h' '*.c' '*.cc' '*.cxx' '*.proto' '*.cs' '*.m' '*.java' '*.js' '*.json')
          echo "Modified files: $pr_files"

          # Convert to space-separated format and export as environment variable
          pr_files=$(echo "$pr_files" | tr '\n' ' ')
          echo "FILES=$pr_files" >> $GITHUB_ENV
          echo "Exported FILES variable: $pr_files"

      - name: Apply clang-format to specific lines
        run: |
          if [ -n "$FILES" ]; then
            for file in $FILES; do
              echo "Processing file: $file"

              # Extract modified line numbers
              line_numbers=$(git diff -U0 origin/main...HEAD -- $file | grep -oP '^\+\d+' | sed 's/^+//')
              if [ -n "$line_numbers" ]; then
                echo "Modified lines in $file: $line_numbers"

                # Apply clang-format to each modified line
                for line in $line_numbers; do
                  echo "Formatting line $line in $file"
                  clang-format -i -lines=$line:$line $file
                done
              else
                echo "No modified lines found in $file"
              fi
            done
          else
            echo "No files to process."
          fi

      - name: Show formatting differences
        run: |
          if [ -n "$FILES" ]; then
            for file in $FILES; do
              echo "Checking differences for: $file"

              # Display formatting differences
              if ! git diff --quiet $file; then
                echo "Differences after running clang-format on $file:"
                git diff --color $file
              else
                echo "No differences found for: $file"
              fi
            done
          else
            echo "No files to check."
          fi
