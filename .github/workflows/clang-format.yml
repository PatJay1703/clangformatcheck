name: Clang Format Check

on:
  pull_request:
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.cc'
      - '**/*.cxx'
      - '**/*.java'
      - '**/*.js'
      - '**/*.json'
      - '**/*.m'
      - '**/*.h'
      - '**/*.proto'
      - '**/*.cs'

jobs:
  clang-format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up clang-format
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format

    - name: Check Clang Format on Modified and New Files
      run: |
        # Fetch the main branch to compare changes
        git fetch origin main
        
        # Find the common ancestor commit
        BASE_COMMIT=$(git merge-base origin/main HEAD)
        
        # Check if we were able to get a merge base
        if [ -z "$BASE_COMMIT" ]; then
          echo "No common base commit found. Exiting."
          exit 1
        fi

        # Get the modified or new files since the common ancestor commit
        modified_files=$(git diff --name-only --diff-filter=ACMRT $BASE_COMMIT...HEAD)
        
        if [ -z "$modified_files" ]; then
          echo "No files modified or added"
          exit 0
        fi

        # Run clang-format check on modified or new files
        for file in $modified_files; do
          if [[ $file == *.cpp || $file == *.c || $file == *.cc || $file == *.cxx || $file == *.java || $file == *.js || $file == *.json || $file == *.m || $file == *.h || $file == *.proto || $file == *.cs ]]; then
            echo "Checking clang-format for modified or new file: $file"

            # For new files, use clang-format on the whole file
            if git ls-files --error-unmatch "$file" > /dev/null 2>&1; then
              # File exists in the repo (modified file)
              modified_lines=$(git diff --unified=0 $BASE_COMMIT...HEAD -- $file | grep -E '^\+[^+]' | cut -c2-)
              if [ -n "$modified_lines" ]; then
                echo "$modified_lines" | clang-format --dry-run --Werror
                if [ $? -ne 0 ]; then
                  echo "Clang-format check failed for modified lines in $file. Please format the file using clang-format."
                  exit 1
                fi
              fi
            else
              # New file, format the entire file
              clang-format --dry-run --Werror "$file"
              if [ $? -ne 0 ]; then
                echo "Clang-format check failed for new file $file. Please format the file using clang-format."
                exit 1
              fi
            fi
          fi
        done
