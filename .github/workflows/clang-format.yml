name: Clang Format Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install clang-format
        run: sudo apt-get install -y clang-format

      - name: Find modified, new, and PR files
        id: find_files
        run: |
          # Check if there is a previous commit
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            echo "Previous commit found"
            files=$(git diff --name-only HEAD~1 -- '*.cpp' '*.h')
          else
            echo "Previous commit not found, skipping diff check"
            files=""
          fi

          # Find new (untracked) files
          new_files=$(git ls-files --others --exclude-standard '*.cpp' '*.h')

          # Find files changed in pull request
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            pr_files=$(git diff --name-only origin/main...HEAD -- '*.cpp' '*.h')
          else
            pr_files=""
          fi

          # Combine and filter unique file names
          all_files=$(echo -e "$files\n$new_files\n$pr_files" | sort -u | tr '\n' ' ' | xargs)

          # Set environment variable only if there are files to check
          if [ -n "$all_files" ]; then
            echo "FILES=$all_files" >> $GITHUB_ENV
            echo "Checking files: $all_files"
          else
            echo "FILES=" >> $GITHUB_ENV
            echo "No relevant files to check."
          fi

      - name: Run clang-format and show differences
        run: |
          if [ -n "$FILES" ]; then
            echo "Checking formatting for: $FILES"

            # Check formatting without modifying files
            format_errors=0
            for file in $FILES; do
              if ! clang-format --dry-run --Werror "$file"; then
                echo "❌ Formatting issues detected in $file"
                format_errors=1
              fi
            done

            if [ "$format_errors" -eq 1 ]; then
              echo "❌ Some files are not formatted correctly!"
              echo "Run 'clang-format -i <file>' to fix them."
              exit 1
            else
              echo "✅ All files are correctly formatted."
            fi
          else
            echo "No relevant files to check."
          fi
