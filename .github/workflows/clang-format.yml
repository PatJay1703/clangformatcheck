name: Clang Format Check

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.cc'
      - '**/*.cxx'
      - '**/*.java'
      - '**/*.js'
      - '**/*.json'
      - '**/*.m'
      - '**/*.h'
      - '**/*.proto'
      - '**/*.cs'

jobs:
  code_formatter:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      # Checkout your own repository
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure the full history is fetched

      # Fetch the LLVM repository code formatting tools
      - name: Fetch LLVM repository
        uses: actions/checkout@v2
        with:
          repository: llvm/llvm-project
          ref: main  # Or the branch you want to fetch from LLVM
          fetch-depth: 0
          path: llvm-repo

      # Install clang-format and git-clang-format
      - name: Install clang-format and git-clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
          # Install git-clang-format
          git clone https://github.com/llvm/llvm-project.git /tmp/llvm-project
          cd /tmp/llvm-project && git checkout main
          cd /tmp/llvm-project/clang/tools/clang-format
          make
          sudo make install

      # Install Python and dependencies
      - name: Setup Python environment
        uses: actions/setup-python@v5.4.0
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'llvm-repo/llvm/utils/git/requirements_formatting.txt'

      - name: Install Python dependencies
        run: pip install -r llvm-repo/llvm/utils/git/requirements_formatting.txt

      # Get the list of changed files in the PR
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@fea790cb660e33aef4bdf07304e28fedd77dfa13 # v39.2.4
        with:
          separator: ","
          skip_initial_fetch: true

      # Run the Python code-format-helper.py script to check formatting
      - name: Run code formatter using Python script
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          START_REV: ${{ github.event.pull_request.base.sha }}
          END_REV: ${{ github.event.pull_request.head.sha }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "[]" > comments &&
          python ./llvm-repo/llvm/utils/git/code-format-helper.py \
            --write-comment-to-file \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --issue-number $GITHUB_PR_NUMBER \
            --start-rev $(git merge-base $START_REV $END_REV) \
            --end-rev $END_REV \
            --changed-files "$CHANGED_FILES"

      # Upload the comments file as an artifact (if any formatting issues are detected)
      - uses: actions/upload-artifact@v4.3.0
        if: always()
        with:
          name: clang-format-comments
          path: comments
