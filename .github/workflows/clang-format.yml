name: Clang Format Check

on:
  pull_request:
    branches:
      - main
    paths:
      - '**/*.c'
      - '**/*.cpp'
      - '**/*.cc'
      - '**/*.cxx'
      - '**/*.java'
      - '**/*.js'
      - '**/*.json'
      - '**/*.m'
      - '**/*.h'
      - '**/*.proto'
      - '**/*.cs'

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures the full history is fetched

      - name: Fetch latest changes from remote
        run: git fetch origin

      - name: Install clang-format
        run: sudo apt-get install -y clang-format

      - name: Find modified files and specific lines
        id: find_files
        run: |
          # Fetch the list of files modified in the pull request
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            pr_files=$(git diff --name-only origin/main...HEAD -- '*.cpp' '*.h' '*.c' '*.cc' '*.cxx' \
                    '*.proto' '*.cs' '*.m' '*.java' '*.js' '*.json')
          else
            pr_files=""
          fi

          # Loop over the modified files and extract the modified lines for each file
          changed_lines=""
          for file in $pr_files; do
            lines=$(git diff -U0 origin/main...HEAD -- "$file" | grep '^\+' | grep -v '^\+\+\+' | cut -c2-)
            if [ -n "$lines" ]; then
              changed_lines="$changed_lines $file"
            fi
          done

          # Set the environment variable with the modified files and changed lines
          echo "FILES=$changed_lines" >> $GITHUB_ENV
          echo "Checking files: $changed_lines"

      - name: Run clang-format on changed lines
        run: |
          if [ -n "$FILES" ]; then
            # Run clang-format only on changed lines
            clang-format -i $FILES
            if ! git diff --quiet; then
              echo "Code not formatted correctly. Showing diff:"
              git diff --color
              exit 1
            fi
          else
            echo "No relevant files to check."
          fi
